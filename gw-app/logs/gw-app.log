[INFO] [2017-11-18 09:43:31][org.springframework.context.annotation.AnnotationConfigApplicationContext]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ec756bd: startup date [Sat Nov 18 09:43:31 CST 2017]; root of context hierarchy
[INFO] [2017-11-18 09:43:31][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[INFO] [2017-11-18 09:43:31][org.hibernate.validator.internal.util.Version]HV000001: Hibernate Validator 5.3.5.Final
[INFO] [2017-11-18 09:43:31][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$404fe0cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] [2017-11-18 09:43:31][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Fetching config from server at: http://localhost:8888
[INFO] [2017-11-18 09:43:34][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Located environment: name=application, profiles=[default], label=master, version=44065cee22654bb28852d0d1cae280641b840368, state=null
[INFO] [2017-11-18 09:43:34][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration]Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}]]
[INFO] [2017-11-18 09:43:34][com.devchen.gw.GwAppApplication]No active profile set, falling back to default profiles: default
[INFO] [2017-11-18 09:43:34][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext]Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d025197: startup date [Sat Nov 18 09:43:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec756bd
[INFO] [2017-11-18 09:43:35][org.springframework.cloud.context.scope.GenericScope]BeanFactory id=69bb6838-6312-38ed-8650-2eed9fb0771c
[INFO] [2017-11-18 09:43:35][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[INFO] [2017-11-18 09:43:35][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$404fe0cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] [2017-11-18 09:43:35][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer]Tomcat initialized with port(s): 8080 (http)
[INFO] [2017-11-18 09:43:36][org.springframework.web.context.ContextLoader]Root WebApplicationContext: initialization completed in 1114 ms
[INFO] [2017-11-18 09:43:36][org.springframework.boot.web.servlet.ServletRegistrationBean]Mapping servlet: 'dispatcherServlet' to [/]
[INFO] [2017-11-18 09:43:36][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'metricsFilter' to: [/*]
[INFO] [2017-11-18 09:43:36][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'characterEncodingFilter' to: [/*]
[INFO] [2017-11-18 09:43:36][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[INFO] [2017-11-18 09:43:36][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'httpPutFormContentFilter' to: [/*]
[INFO] [2017-11-18 09:43:36][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'requestContextFilter' to: [/*]
[INFO] [2017-11-18 09:43:36][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'webRequestLoggingFilter' to: [/*]
[INFO] [2017-11-18 09:43:36][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'applicationContextIdFilter' to: [/*]
[INFO] [2017-11-18 09:43:36][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d025197: startup date [Sat Nov 18 09:43:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec756bd
[INFO] [2017-11-18 09:43:36][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[INFO] [2017-11-18 09:43:36][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[INFO] [2017-11-18 09:43:36][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:43:36][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:43:36][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[WARN] [2017-11-18 09:43:37][org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration]No spring.application.name found, defaulting to 'application'
[WARN] [2017-11-18 09:43:37][com.netflix.config.sources.URLConfigurationSource]No URLs will be polled as dynamic configuration sources.
[INFO] [2017-11-18 09:43:37][com.netflix.config.sources.URLConfigurationSource]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[WARN] [2017-11-18 09:43:37][com.netflix.config.sources.URLConfigurationSource]No URLs will be polled as dynamic configuration sources.
[INFO] [2017-11-18 09:43:37][com.netflix.config.sources.URLConfigurationSource]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Registering beans for JMX exposure on startup
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'environmentManager' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'refreshScope' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6d025197,type=ConfigurationPropertiesRebinder]
[INFO] [2017-11-18 09:43:37][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Registering beans for JMX exposure on startup
[INFO] [2017-11-18 09:43:37][org.springframework.context.support.DefaultLifecycleProcessor]Starting beans in phase 0
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[INFO] [2017-11-18 09:43:37][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer]Tomcat started on port(s): 8080 (http)
[INFO] [2017-11-18 09:43:37][com.devchen.gw.GwAppApplication]Started GwAppApplication in 7.24 seconds (JVM running for 8.162)
[INFO] [2017-11-18 09:43:38][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Fetching config from server at: http://localhost:8888
[INFO] [2017-11-18 09:43:39][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Located environment: name=application, profiles=[default], label=master, version=44065cee22654bb28852d0d1cae280641b840368, state=null
[INFO] [2017-11-18 09:50:44][org.springframework.context.annotation.AnnotationConfigApplicationContext]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ec756bd: startup date [Sat Nov 18 09:50:44 CST 2017]; root of context hierarchy
[INFO] [2017-11-18 09:50:45][org.hibernate.validator.internal.util.Version]HV000001: Hibernate Validator 5.3.5.Final
[INFO] [2017-11-18 09:50:45][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[INFO] [2017-11-18 09:50:45][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$404fe0cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] [2017-11-18 09:50:45][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Fetching config from server at: http://localhost:8888
[INFO] [2017-11-18 09:50:46][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Located environment: name=application, profiles=[default], label=master, version=44065cee22654bb28852d0d1cae280641b840368, state=null
[INFO] [2017-11-18 09:50:46][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration]Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}]]
[INFO] [2017-11-18 09:50:46][com.devchen.gw.GwAppApplication]No active profile set, falling back to default profiles: default
[INFO] [2017-11-18 09:50:46][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext]Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65a15628: startup date [Sat Nov 18 09:50:46 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec756bd
[INFO] [2017-11-18 09:50:47][org.springframework.beans.factory.support.DefaultListableBeanFactory]Overriding bean definition for bean 'hystrixFeature' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixWebConfiguration; factoryMethodName=hystrixFeature; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/hystrix/HystrixCircuitBreakerConfiguration$HystrixWebConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration; factoryMethodName=hystrixFeature; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/hystrix/HystrixCircuitBreakerConfiguration.class]]
[INFO] [2017-11-18 09:50:47][org.springframework.cloud.context.scope.GenericScope]BeanFactory id=67abdd2f-0d1d-3bb1-b741-8af73ffbb6b9
[INFO] [2017-11-18 09:50:47][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[INFO] [2017-11-18 09:50:47][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$404fe0cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] [2017-11-18 09:50:48][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer]Tomcat initialized with port(s): 8080 (http)
[INFO] [2017-11-18 09:50:48][org.springframework.web.context.ContextLoader]Root WebApplicationContext: initialization completed in 1389 ms
[WARN] [2017-11-18 09:50:48][com.netflix.config.sources.URLConfigurationSource]No URLs will be polled as dynamic configuration sources.
[INFO] [2017-11-18 09:50:48][com.netflix.config.sources.URLConfigurationSource]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO] [2017-11-18 09:50:48][com.netflix.config.DynamicPropertyFactory]DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6c434264
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.ServletRegistrationBean]Mapping servlet: 'zuulServlet' to [/zuul/*]
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.ServletRegistrationBean]Mapping servlet: 'dispatcherServlet' to [/]
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'metricsFilter' to: [/*]
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'characterEncodingFilter' to: [/*]
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'httpPutFormContentFilter' to: [/*]
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'requestContextFilter' to: [/*]
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'webRequestLoggingFilter' to: [/*]
[INFO] [2017-11-18 09:50:49][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'applicationContextIdFilter' to: [/*]
[INFO] [2017-11-18 09:50:49][org.springframework.cloud.netflix.zuul.ZuulFilterInitializer]Starting filter initializer context listener
[INFO] [2017-11-18 09:50:50][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@65a15628: startup date [Sat Nov 18 09:50:46 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ec756bd
[INFO] [2017-11-18 09:50:50][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[INFO] [2017-11-18 09:50:50][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[INFO] [2017-11-18 09:50:50][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:50:50][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:50:50][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/routes || /routes.json],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> org.springframework.cloud.netflix.zuul.RoutesEndpoint.reset()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/routes || /routes.json],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.String> org.springframework.cloud.netflix.zuul.RoutesEndpoint.getRoutes()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:50:50][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[WARN] [2017-11-18 09:50:51][org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration]No spring.application.name found, defaulting to 'application'
[WARN] [2017-11-18 09:50:51][com.netflix.config.sources.URLConfigurationSource]No URLs will be polled as dynamic configuration sources.
[INFO] [2017-11-18 09:50:51][com.netflix.config.sources.URLConfigurationSource]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Registering beans for JMX exposure on startup
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'zuulEndpoint' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'environmentManager' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'refreshScope' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'zuulEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=zuulEndpoint,type=RoutesEndpoint]
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=65a15628,type=ConfigurationPropertiesRebinder]
[INFO] [2017-11-18 09:50:51][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[INFO] [2017-11-18 09:50:51][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Registering beans for JMX exposure on startup
[INFO] [2017-11-18 09:50:51][org.springframework.context.support.DefaultLifecycleProcessor]Starting beans in phase 0
[INFO] [2017-11-18 09:50:51][org.springframework.cloud.netflix.eureka.InstanceInfoFactory]Setting initial instance status as: STARTING
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.provider.DiscoveryJerseyProvider]Using JSON encoding codec LegacyJacksonJson
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.provider.DiscoveryJerseyProvider]Using JSON decoding codec LegacyJacksonJson
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.provider.DiscoveryJerseyProvider]Using XML encoding codec XStreamXml
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.provider.DiscoveryJerseyProvider]Using XML decoding codec XStreamXml
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver]Resolving eureka endpoints via configuration
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Disable delta property : false
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Single vip registry refresh property : null
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Force full registry fetch : false
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Application is null : false
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Registered Applications size is zero : true
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Application version is -1: true
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Getting all instance registry info from the eureka server
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]The response status is 200
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Starting heartbeat executor: renew interval is: 30
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.InstanceInfoReplicator]InstanceInfoReplicator onDemand update allowed rate per min is 4
[INFO] [2017-11-18 09:50:51][com.netflix.discovery.DiscoveryClient]Discovery Client initialized at timestamp 1510969851977 with initial instances count: 1
[INFO] [2017-11-18 09:50:52][org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration]Registering application unknown with eureka with status UP
[INFO] [2017-11-18 09:50:52][com.netflix.discovery.DiscoveryClient]Saw local status change event StatusChangeEvent [timestamp=1510969852033, current=UP, previous=STARTING]
[INFO] [2017-11-18 09:50:52][com.netflix.discovery.DiscoveryClient]DiscoveryClient_UNKNOWN/medivh-PC: registering service...
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[INFO] [2017-11-18 09:50:52][com.netflix.discovery.DiscoveryClient]DiscoveryClient_UNKNOWN/medivh-PC - registration status: 204
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[INFO] [2017-11-18 09:50:52][org.springframework.context.support.DefaultLifecycleProcessor]Starting beans in phase 2147483647
[INFO] [2017-11-18 09:50:52][org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration]Starting poller
[INFO] [2017-11-18 09:50:52][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer]Tomcat started on port(s): 8080 (http)
[INFO] [2017-11-18 09:50:52][org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration]Updating port to 8080
[INFO] [2017-11-18 09:50:52][com.devchen.gw.GwAppApplication]Started GwAppApplication in 8.023 seconds (JVM running for 8.954)
[INFO] [2017-11-18 09:50:52][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Fetching config from server at: http://localhost:8888
[INFO] [2017-11-18 09:50:53][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Located environment: name=application, profiles=[default], label=master, version=44065cee22654bb28852d0d1cae280641b840368, state=null
[INFO] [2017-11-18 09:51:39][org.springframework.context.annotation.AnnotationConfigApplicationContext]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b26e945: startup date [Sat Nov 18 09:51:39 CST 2017]; root of context hierarchy
[INFO] [2017-11-18 09:51:39][org.hibernate.validator.internal.util.Version]HV000001: Hibernate Validator 5.3.5.Final
[INFO] [2017-11-18 09:51:39][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[INFO] [2017-11-18 09:51:39][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e996da3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] [2017-11-18 09:51:40][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Fetching config from server at: http://localhost:8888
[INFO] [2017-11-18 09:51:41][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Located environment: name=gw-app, profiles=[dev], label=master, version=44065cee22654bb28852d0d1cae280641b840368, state=null
[INFO] [2017-11-18 09:51:41][org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration]Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}]]
[INFO] [2017-11-18 09:51:41][com.devchen.gw.GwAppApplication]The following profiles are active: dev
[INFO] [2017-11-18 09:51:41][org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext]Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34cdeda2: startup date [Sat Nov 18 09:51:41 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6b26e945
[INFO] [2017-11-18 09:51:41][org.springframework.beans.factory.support.DefaultListableBeanFactory]Overriding bean definition for bean 'hystrixFeature' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixWebConfiguration; factoryMethodName=hystrixFeature; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/hystrix/HystrixCircuitBreakerConfiguration$HystrixWebConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration; factoryMethodName=hystrixFeature; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/hystrix/HystrixCircuitBreakerConfiguration.class]]
[INFO] [2017-11-18 09:51:41][org.springframework.cloud.context.scope.GenericScope]BeanFactory id=67abdd2f-0d1d-3bb1-b741-8af73ffbb6b9
[INFO] [2017-11-18 09:51:41][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[INFO] [2017-11-18 09:51:41][org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e996da3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO] [2017-11-18 09:51:42][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer]Tomcat initialized with port(s): 8999 (http)
[INFO] [2017-11-18 09:51:42][org.springframework.web.context.ContextLoader]Root WebApplicationContext: initialization completed in 1302 ms
[WARN] [2017-11-18 09:51:43][com.netflix.config.sources.URLConfigurationSource]No URLs will be polled as dynamic configuration sources.
[INFO] [2017-11-18 09:51:43][com.netflix.config.sources.URLConfigurationSource]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO] [2017-11-18 09:51:43][com.netflix.config.DynamicPropertyFactory]DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@62286c34
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.ServletRegistrationBean]Mapping servlet: 'zuulServlet' to [/zuul/*]
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.ServletRegistrationBean]Mapping servlet: 'dispatcherServlet' to [/]
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'metricsFilter' to: [/*]
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'characterEncodingFilter' to: [/*]
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'httpPutFormContentFilter' to: [/*]
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'requestContextFilter' to: [/*]
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'webRequestLoggingFilter' to: [/*]
[INFO] [2017-11-18 09:51:43][org.springframework.boot.web.servlet.FilterRegistrationBean]Mapping filter: 'applicationContextIdFilter' to: [/*]
[INFO] [2017-11-18 09:51:43][org.springframework.cloud.netflix.zuul.ZuulFilterInitializer]Starting filter initializer context listener
[INFO] [2017-11-18 09:51:44][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@34cdeda2: startup date [Sat Nov 18 09:51:41 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6b26e945
[INFO] [2017-11-18 09:51:44][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[INFO] [2017-11-18 09:51:44][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[INFO] [2017-11-18 09:51:44][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:51:44][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:51:44][org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/routes || /routes.json],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.String> org.springframework.cloud.netflix.zuul.RoutesEndpoint.reset()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/routes || /routes.json],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.String> org.springframework.cloud.netflix.zuul.RoutesEndpoint.getRoutes()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[WARN] [2017-11-18 09:51:45][com.netflix.config.sources.URLConfigurationSource]No URLs will be polled as dynamic configuration sources.
[INFO] [2017-11-18 09:51:45][com.netflix.config.sources.URLConfigurationSource]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Registering beans for JMX exposure on startup
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'zuulEndpoint' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'environmentManager' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Bean with name 'refreshScope' has been autodetected for JMX exposure
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'zuulEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=zuulEndpoint,type=RoutesEndpoint]
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=34cdeda2,type=ConfigurationPropertiesRebinder]
[INFO] [2017-11-18 09:51:45][org.springframework.jmx.export.annotation.AnnotationMBeanExporter]Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[INFO] [2017-11-18 09:51:45][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Registering beans for JMX exposure on startup
[INFO] [2017-11-18 09:51:45][org.springframework.context.support.DefaultLifecycleProcessor]Starting beans in phase 0
[INFO] [2017-11-18 09:51:45][org.springframework.cloud.netflix.eureka.InstanceInfoFactory]Setting initial instance status as: STARTING
[INFO] [2017-11-18 09:51:45][com.netflix.discovery.provider.DiscoveryJerseyProvider]Using JSON encoding codec LegacyJacksonJson
[INFO] [2017-11-18 09:51:45][com.netflix.discovery.provider.DiscoveryJerseyProvider]Using JSON decoding codec LegacyJacksonJson
[INFO] [2017-11-18 09:51:45][com.netflix.discovery.provider.DiscoveryJerseyProvider]Using XML encoding codec XStreamXml
[INFO] [2017-11-18 09:51:45][com.netflix.discovery.provider.DiscoveryJerseyProvider]Using XML decoding codec XStreamXml
[INFO] [2017-11-18 09:51:45][com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver]Resolving eureka endpoints via configuration
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Disable delta property : false
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Single vip registry refresh property : null
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Force full registry fetch : false
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Application is null : false
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Registered Applications size is zero : true
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Application version is -1: true
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Getting all instance registry info from the eureka server
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]The response status is 200
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Starting heartbeat executor: renew interval is: 30
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.InstanceInfoReplicator]InstanceInfoReplicator onDemand update allowed rate per min is 4
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Discovery Client initialized at timestamp 1510969906083 with initial instances count: 2
[INFO] [2017-11-18 09:51:46][org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration]Registering application gw-app with eureka with status UP
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]Saw local status change event StatusChangeEvent [timestamp=1510969906140, current=UP, previous=STARTING]
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]DiscoveryClient_GW-APP/medivh-PC:gw-app:8999: registering service...
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter]Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[INFO] [2017-11-18 09:51:46][org.springframework.context.support.DefaultLifecycleProcessor]Starting beans in phase 2147483647
[INFO] [2017-11-18 09:51:46][org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration]Starting poller
[INFO] [2017-11-18 09:51:46][com.netflix.discovery.DiscoveryClient]DiscoveryClient_GW-APP/medivh-PC:gw-app:8999 - registration status: 204
[INFO] [2017-11-18 09:51:46][org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer]Tomcat started on port(s): 8999 (http)
[INFO] [2017-11-18 09:51:46][org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration]Updating port to 8999
[INFO] [2017-11-18 09:51:46][com.devchen.gw.GwAppApplication]Started GwAppApplication in 7.691 seconds (JVM running for 8.371)
[INFO] [2017-11-18 09:51:46][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Fetching config from server at: http://localhost:8888
[INFO] [2017-11-18 09:51:48][org.springframework.cloud.config.client.ConfigServicePropertySourceLocator]Located environment: name=gw-app, profiles=[dev], label=master, version=44065cee22654bb28852d0d1cae280641b840368, state=null
[INFO] [2017-11-18 09:52:10][org.springframework.web.servlet.DispatcherServlet]FrameworkServlet 'dispatcherServlet': initialization started
[INFO] [2017-11-18 09:52:10][org.springframework.web.servlet.DispatcherServlet]FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
[INFO] [2017-11-18 09:52:10][org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping]Mapped URL path [/account/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
[INFO] [2017-11-18 09:52:10][org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping]Mapped URL path [/article/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
[INFO] [2017-11-18 09:52:10][org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping]Mapped URL path [/config-app/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
[INFO] [2017-11-18 09:52:10][org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping]Mapped URL path [/unknown/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
[ERROR] [2017-11-18 09:56:18][com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient]Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:832)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1396)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 more
[ERROR] [2017-11-18 09:56:18][com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient]Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1064)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:946)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1468)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1435)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
[WARN] [2017-11-18 09:56:18][com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient]Request execution failure
[WARN] [2017-11-18 09:56:18][com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient]Request execution failure
